>>> from recetas.models import Autor,Receta,Comentario
>>> a = Autor(nombre='javier perez',email='eperez@gmail.com')
>>> a.save()
>>> Autor.objects.all()
<QuerySet [<Autor: javier perez>]>
>>> primer = Autor.objects.get(pk=1) 
>>> primer.email
'eperez@gmail.com'
>>> primer.nombre
'javier perez'
>>> 
>>> r1 = Receta.objects.create(
... titulo ='huevo frito'.
... ingredientes='huevo,sal,aceite',
  File "<console>", line 3
    ingredientes='huevo,sal,aceite',
                ^
SyntaxError: invalid syntax
>>> r1 = Receta.objects.create(
... titulo='huevo frito',
... ingredientes='huevo,sal,aceite',
... preparacion='calentar el sarten y freir el huevo',
... autor-primer)
  File "<console>", line 5
    autor-primer)
                ^
SyntaxError: positional argument follows keyword argument
>>> r1 = Receta.objects.create(
... titulo='huevo frito',
... ingredientes='huevo,sal,aceite',
... preparacion='calentar el sarten y freir al huevo',
... autor=primer)
>>> Receta.objects.all()
<QuerySet [<Receta: huevo frito>]>
>>> c1 = Comentario.objects.create(
... receta=r1,
... texto='Un clasico para el desayuno')
>>> Comentarios.objects.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'Comentarios' is not defined
>>> Comentario.objects.all()
<QuerySet [<Comentario: Un clasico para el desayuno>]>
>>> r2 = Receta.objects.create(
... titulo = 'Agua Hervida',
... ingredientes='agua',
... preparacion ='poner la tetera en el bla bla bla',
... autor=primer)
>>> Receta.objects.all
<bound method BaseManager.all of <django.db.models.manager.Manager object at 0x00000192EB221760>>
>>> Receta.objects.all()
<QuerySet [<Receta: huevo frito>, <Receta: Agua Hervida>]>
>>> Receta.objects.exclude(ingredientes_startswith='A')
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "D:\django\labs\TECSUP-DAE-2021-2-B\myvenv\lib\site-packages\django\db\models\manager.py", line 85, in 
manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\django\labs\TECSUP-DAE-2021-2-B\myvenv\lib\site-packages\django\db\models\query.py", line 949, in exclude
    return self._filter_or_exclude(True, args, kwargs) 
  File "D:\django\labs\TECSUP-DAE-2021-2-B\myvenv\lib\site-packages\django\db\models\query.py", line 961, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "D:\django\labs\TECSUP-DAE-2021-2-B\myvenv\lib\site-packages\django\db\models\query.py", line 966, in _filter_or_exclude_inplace
    self._query.add_q(~Q(*args, **kwargs))
  File "D:\django\labs\TECSUP-DAE-2021-2-B\myvenv\lib\site-packages\django\db\models\sql\query.py", line 1393, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "D:\django\labs\TECSUP-DAE-2021-2-B\myvenv\lib\site-packages\django\db\models\sql\query.py", line 1412, in _add_q
    child_clause, needed_inner = self.build_filter(    
  File "D:\django\labs\TECSUP-DAE-2021-2-B\myvenv\lib\site-packages\django\db\models\sql\query.py", line 1286, in build_filter
    lookups, parts, reffed_expression = self.solve_lookup_type(arg)
  File "D:\django\labs\TECSUP-DAE-2021-2-B\myvenv\lib\site-packages\django\db\models\sql\query.py", line 1112, in solve_lookup_type
    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())
  File "D:\django\labs\TECSUP-DAE-2021-2-B\myvenv\lib\site-packages\django\db\models\sql\query.py", line 1539, in names_to_path
    raise FieldError("Cannot resolve keyword '%s' into 
field. "
django.core.exceptions.FieldError: Cannot resolve keyword 'ingredientes_startswith' into field. Choices are: autor, autor_id, comentario, id, ingredientes, preparacion, tiempo_registro, titulo
>>> Receta.objects.exclude(ingredientes__startswith='A')
<QuerySet [<Receta: huevo frito>, <Receta: Agua Hervida>]>
>>> Receta.objests.filter(preparacion__contains='tetera')
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Receta' has no attribute 'objests'
>>> Receta.objects.filter()preparacion__constains='tetera')
  File "<console>", line 1
    Receta.objects.filter()preparacion__constains='tetera')
                           ^
SyntaxError: invalid syntax
>>> Receta.objects.filter(prepracion__contains='tetera')
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "D:\django\labs\TECSUP-DAE-2021-2-B\myvenv\lib\site-packages\django\db\models\manager.py", line 85, in 
manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\django\labs\TECSUP-DAE-2021-2-B\myvenv\lib\site-packages\django\db\models\query.py", line 941, in filter
    return self._filter_or_exclude(False, args, kwargs)
  File "D:\django\labs\TECSUP-DAE-2021-2-B\myvenv\lib\site-packages\django\db\models\query.py", line 961, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "D:\django\labs\TECSUP-DAE-2021-2-B\myvenv\lib\site-packages\django\db\models\query.py", line 968, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "D:\django\labs\TECSUP-DAE-2021-2-B\myvenv\lib\site-packages\django\db\models\sql\query.py", line 1393, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "D:\django\labs\TECSUP-DAE-2021-2-B\myvenv\lib\site-packages\django\db\models\sql\query.py", line 1412, in _add_q
    child_clause, needed_inner = self.build_filter(    
  File "D:\django\labs\TECSUP-DAE-2021-2-B\myvenv\lib\site-packages\django\db\models\sql\query.py", line 1286, in build_filter
    lookups, parts, reffed_expression = self.solve_lookup_type(arg)
  File "D:\django\labs\TECSUP-DAE-2021-2-B\myvenv\lib\site-packages\django\db\models\sql\query.py", line 1112, in solve_lookup_type
    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())
  File "D:\django\labs\TECSUP-DAE-2021-2-B\myvenv\lib\site-packages\django\db\models\sql\query.py", line 1539, in names_to_path
    raise FieldError("Cannot resolve keyword '%s' into 
field. "
django.core.exceptions.FieldError: Cannot resolve keyword 'prepracion' into field. Choices are: autor, autor_id, comentario, id, ingredientes, preparacion, tiempo_registro, titulo
>>> Receta.objects.all().order_by('tituto') 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "D:\django\labs\TECSUP-DAE-2021-2-B\myvenv\lib\site-packages\django\db\models\query.py", line 1149, in 
order_by
    obj.query.add_ordering(*field_names)
  File "D:\django\labs\TECSUP-DAE-2021-2-B\myvenv\lib\site-packages\django\db\models\sql\query.py", line 1993, in add_ordering
    self.names_to_path(item.split(LOOKUP_SEP), self.model._meta)
  File "D:\django\labs\TECSUP-DAE-2021-2-B\myvenv\lib\site-packages\django\db\models\sql\query.py", line 1539, in names_to_path
    raise FieldError("Cannot resolve keyword '%s' into 
field. "
django.core.exceptions.FieldError: Cannot resolve keyword 'tituto' into field. Choices are: autor, autor_id, comentario, id, ingredientes, preparacion, tiempo_registro, titulo
>>> c2 = Comentario.object.create(
... receta=r1,
... texto='para pasar el hambre')
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Comentario' has no attribute 'object'
>>> c2 = Comentario.objects.create(
... receta=r1,
... texto='Para pasar el hambre')
>>> Comentario.objects.filter(receta=r1).count()
2
>>> c3 = Comentario.objects.create(
... receta=r2,
... texto='Receta sin sentido')
>>> Comentario.objects.filter(receta=r2)
<QuerySet [<Comentario: Receta sin sentido>]>
>>> c3.delete()
(1, {'recetas.Comentario': 1})
>>> Comentario.objects.filter(receta=r2)
<QuerySet []>
>>> Receta.objects.get(titulo='Agua Hervida'.autor.nombre
... )
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'str' object has no attribute 'autor'  
>>> Receta.objects.get(titulo='Agua Hervida').autor.nombre
'javier perez'
>>> Receta.objects.get(titulo='Agua Hervida').autor.email
'eperez@gmail.com'